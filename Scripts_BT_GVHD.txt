Normalization Scripts
All scripts were run using R version 3.1

Human Microarrays:

###Redo HuGVHD By Day
###1501104 Final Publication of HuGVHD results

remove(list=ls());
graphics.off();
os<-Sys.info()['sysname']
if(os=="Windows"){.libPaths(c(.libPaths(), "C:/Users/sfurla/Documents/R/win-library/3.0") )}


#######LIbraries######

library(XLConnect)
library(Biobase)
library(sva)
source(paste(rootpath,"/Bioinformatics Resources/Human Annotation/HumanAnnotationSF.R", sep=""))
if(os=="Windows"){rootpath<-"C:/Users/sfurla/Dropbox (Kean Lab)/AWS/Scott"} else {rootpath<-"~/Dropbox (Kean Lab)/AWS/Scott"}

pal<-read.table(paste(rootpath,"/Bioinformatics Resources/Color/pal26-HuGVHD.txt", sep=""), header=TRUE, stringsAsFactors=FALSE)
cols<-list(cols=c(rgb(pal$R/255,pal$G/255,pal$B/255))[!is.na(pal$Group)], name=pal$Name[!is.na(pal$Group)], group=pal$Group[!is.na(pal$Group)])
pie(rep(1,length(cols$cols)), col = cols$cols, labels=cols$group, main="Color Assignment")
path<-"~/Dropbox (Kean Lab)/People/Scott Furlan/R work/HuGVHD/HuGVHD-Published"
setwd(path)
rmaTable<-read.csv("151006.SST-RMA-GENE-FINAL.csv")
workpath<-"/Rproj/HuGVHD Data"
setwd(paste(rootpath, workpath, sep=""))
wb<-loadWorkbook("20151104-PhenodataFinal.xlsx")
ws<-readWorksheet(wb, "Final")
ToBatchCorrect<-ws[ws$Exclude=="NO",]
colnames(rmaTable)
endcolumn<-26
rmaTable.cut<-rmaTable[,1:endcolumn-1]
rownames(rmaTable.cut)<-rmaTable.cut$Probe.Set.ID
rmaTable.cut<-rmaTable.cut[,-1]
colnames(rmaTable.cut)
tmp<-strsplit(colnames(rmaTable.cut), ".Group6.")
tmp2<-substring(unlist(lapply (tmp, "[[",1)),2)
ToBatchCorrect$CEL.File %in% paste(tmp2, "CEL", sep=".")
reorder<-match(ToBatchCorrect$CEL.File, paste(tmp2, "CEL", sep="."))
pdata.batch<-ToBatchCorrect
rmaTable.cut.reordered<-rmaTable.cut[,reorder]
phenoData.batch<-AnnotatedDataFrame(data=pdata.batch)
colnames(rmaTable.cut.reordered)
colnames(rmaTable.cut.reordered)<-phenoData.batch$Sample.name
rmaData<-ExpressionSet(assayData=as.matrix(rmaTable.cut.reordered), annotation="pd.hta.2.0")
phenoData(rmaData)<-phenoData.batch
rmaData$Sample.name
colnames(exprs(rmaData))


#ComBat
batch = pdata.batch$characteristics..batch
mod = model.matrix(~as.factor(characteristics..Hx_of_GVHD), data=pdata.batch)
combat_edata = ComBat(dat=exprs(rmaData), batch=batch, mod=mod, numCovs=NULL, par.prior=TRUE, prior.plots=FALSE)
combat_eset<-ExpressionSet(assayData=combat_edata)
phenoData(combat_eset)<-phenoData(rmaData)
annotation(combat_eset)<-annotation(rmaData)

###Write Batch Corrected Data###
write.csv(exprs(combat_eset), file="151104.HuGVHDByDay_BATCH.csv")

#Filter batch corrected
celfiles.filtered <- nsFilter(combat_eset, require.entrez=FALSE, remove.dupEntrez=FALSE)
filtered.eset<-celfiles.filtered$eset

#####ANNOTATE, Clean up data######
#annotate batch corrected
data.ann<-masterannotate.hs(exprs(filtered.eset))
finaleset.ann<-filtered.eset
exprs(finaleset.ann)<-data.ann
saveRDS(finaleset.ann, file="151104finaleset.ann_ByDay.rds")

unfilteredeset.ann<-filtered.eset
combat_edata.ann<-masterannotate.hs(combat_edata)
exprs(unfilteredeset.ann)<-combat_edata.ann
save(unfilteredeset.ann, file="151104finaleset.ann_ByDay_unfilt.rds")

Normalization Non-Human Primate Microarrays:

###Network####
###
# 151027
# Network Analysis redo No multiple timepoints in breakthrough group
####
Sys.umask("002")
remove(list=ls());
graphics.off();
os<-Sys.info()['sysname']

#######LIbraries######
library(Vennerable)
library(simpleaffy)
library(RColorBrewer)
library(sva)
library(limma)
library(heatmap.plus)
library(made4)
library(vegan)
library(KEGGREST)
library(org.Hs.eg.db)
library(GSEABase)
library(ggplot2)
library(plyr)
library(gtools)
library(grDevices)
library(survival)
library(plotrix)
library(XLConnect)
library(topGO)
library(RDAVIDWebService)

#########FRONTMATTER##########
if(os=="Windows"){rootpath<-"C:/Users/sfurla/Dropbox (Kean Lab)/AWS/Scott"} else {rootpath<-"~/Dropbox (Kean Lab)/AWS/Scott"}
source(paste(rootpath,"/Bioinformatics Resources/SF Functions/GSEASupport.R", sep=""))
source(paste(rootpath,"/Bioinformatics Resources/SF Functions/LIMMASupport.R", sep=""))
source(paste(rootpath,"/Bioinformatics Resources/SF Functions/MAboxplot2-working.R", sep=""))
source(paste(rootpath,"/Bioinformatics Resources/SF Functions/Other.R", sep=""))
source(paste(rootpath,"/Bioinformatics Resources/Rhesus Annotation/MasterAnnotationSource.R", sep=""))
source(paste(rootpath,"/Bioinformatics Resources/SF Functions/MA.PP.datalist.R", sep=""))
#pal<-c("#231F20", "#F7931D", "#00B9F1", "#00A875", "#EBDD38", "#0071BB", "#F05A22", "#DA6EAA")
#names(pal)<-c("Black", "Orange", "Cyan", "Green", "Yellow", "Blue", "Red", "Pink")
pal<-read.table(paste(rootpath,"/Bioinformatics Resources/Color/pal30-Alldata.txt", sep=""), header=TRUE, stringsAsFactors=FALSE)
cols<-list(cols=c(rgb(pal$R/255,pal$G/255,pal$B/255))[!isNA(pal$Group)], name=pal$Name[!isNA(pal$Group)], group=pal$Group[!isNA(pal$Group)])
pie(rep(1,length(cols$cols)), col = cols$cols, labels=cols$group, main="Color Assignment")


#### RMA NORMALIZATION#####
workpath<-"/Markdown/MarkdownData/NetworkAnalysisRedo"
setwd(paste(rootpath,workpath,sep=""))
wb<-loadWorkbook("151027_DirectoryofArrays_NetworkAnalysis.xlsx")
ws<-readWorksheet(wb, "Sheet1")
ws<-ws[ws$NetworkGroup!="EXCLUDE",]
if(os=="Windows"){setwd("C:/Users/sfurla/Dropbox (Kean Lab)/LK NHP/Microarray/Data Files/CEL Files")} else {setwd("~/Dropbox (Kean Lab)/LK NHP/Microarray/Data Files/CEL Files")}
textfileN<-"20151027_Analysis.txt"
write.table(ws[,1:11], textfileN, row.names=FALSE, quote=FALSE)
celfiles<-read.affy(covdesc=textfileN)
####Check included samples###
paste(celfiles$Group, celfiles$ID, celfiles$NetworkGroup)
####Add phenodata###
phenoData<-AnnotatedDataFrame(data=ws)
celfiles.rma<-rma(celfiles)
phenoData(celfiles.rma)<-phenoData
workpath<-"/Markdown/MarkdownData/NetworkAnalysisRedo"
setwd(paste(rootpath,workpath,sep=""))
classvec<-as.factor(celfiles.rma$NetworkGroup)
selected=levels(classvec)
classvec.sel<-as.factor(as.character(classvec[classvec %in% selected]))
gcolor<-cols$cols[match(selected, cols$group)]
names(gcolor)<-cols$group[match(selected, cols$group)]
pie(rep(1,length(gcolor)), col = gcolor, labels=names(gcolor), main="Color Assignment")
tcolor<-gcolor[names(gcolor)!="Healthy.Control"]
gcolors<-gcolor[classvec.sel]
tcolors<-tcolor[classvec[classvec.sel!="Healthy.Control"]]
levels(classvec)
#acquire phenodata
pheno = pData(celfiles.rma)
#acquire expression data
edata = exprs(celfiles.rma)
#Create model
mod = model.matrix(~as.factor(NetworkGroup), data=pheno)

#ComBat
batch = pheno$Batch
combat_edata = ComBat(dat=exprs(celfiles.rma), batch=batch, mod=mod, numCovs=NULL, par.prior=TRUE, prior.plots=FALSE)
combat_eset<-ExpressionSet(assayData=combat_edata)
phenoData(combat_eset)<-phenoData(celfiles.rma)
pData(combat_eset)<-pData(celfiles.rma)
annotation(combat_eset)<-annotation(celfiles.rma)

###Filtering###
celfiles.filtered <- nsFilter(combat_eset, require.entrez=FALSE, remove.dupEntrez=FALSE, var.cutoff=0.5, var.func=var)
finaleset<-celfiles.filtered$eset
nrow(exprs(finaleset))
#exprs(finaleset)["MmuSTS.678.1.S1_at",]
#exprs(finaleset)["MmugDNA.10007.1.S1_at",]
#finaleset<-combat_eset
clusterlabels<-pheno$Group
colnames(exprs(finaleset))<-clusterlabels
distance <- dist(t(exprs(finaleset)),method="maximum")
clusters <- hclust(distance)


#####ANNOTATE, Clean up data######
finaleset.ann<-masterannotate(exprs(finaleset))
exprs(finaleset)<-finaleset.ann
#var(exprs(finaleset)["TWIST1",])
nrow(exprs(finaleset))
#prettyDend(finaleset,labels=finaleset$Group)
saveRDS(finaleset,file="finaleset.151027-var")
#load(file="finaleset.141111")
unfilteredeset<-finaleset
combat_edata.ann<-masterannotate(combat_edata)
exprs(unfilteredeset)<-combat_edata.ann
nrow(exprs(unfilteredeset))
nrow(exprs(finaleset))
saveRDS(unfilteredeset, file="unfilteredeset.151027-var")
#load(file="unfilteset.141111")

#####WRITE QC FILE#####
pdf("151027-Pre-Analysis Network-var.pdf", height=8.5, width=11)
hist(celfiles,type="l", col=gcolors,main = "Histogram of raw data")
SFHist(exprs(celfiles.rma), gcolors, "RMA Corrected")
boxplot(edata, col=gcolors, main="RMA Corrected")
SFHist(combat_edata, gcolors, "RMA + Batch Corrected")
boxplot(combat_edata, col=gcolors, main="RMA + Batch Corrected")
#hist(celfiles.rma,type="l", col=gcolors,main = "Histogram of RMA data")
#hist(combat_eset,type="l", col=gcolors,main = "Histogram of batch-corrected data")
dev.off()

